{"version":3,"sources":["Calendar.js","Header.js","Stats.js","Notes.js","App.js","index.js"],"names":["Example","props","useState","allDays","setAllDays","Date","useEffect","setSelectedDays","className","name","onChange","e","console","log","target","value","setSelectedType","modifiersStyles","birthday","color","backgroundColor","thursdays","selected","today","outside","navButtonPrev","selectedDays","onDayClick","day","undefined","found","find","element","Number","indexOf","holder","splice","showOutsideDays","Header","allMonths","date","getDate","month","getMonth","year","getFullYear","currentDate","Stats","goalProgress","setGoalProgress","other","setOther","handleChange","setSkiData","skiData","parseInt","total","goal","toFixed","length","selectedType","powder","backcountry","type","id","Notes","allNotes","setAllNotes","handleDate","values","split","selectedDate","onClick","text","document","querySelector","handleSubmit","map","note","index","key","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8589367a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\n\nexport default function Example(props) {\n  const [allDays, setAllDays] = useState([]);\n  const modifiers = {\n    thursdays: { daysOfWeek: [4] },\n    birthday: new Date(2020, 3, 2),\n  };\n  const modifiersStyles = {\n    birthday: {\n      color: \"white\",\n      backgroundColor: \"red\",\n    },\n    thursdays: {\n      color: \"#ffc107\",\n      backgroundColor: \"#fffdee\",\n    },\n    selected: {\n      backgroundColor: \"#becbf4\",\n      color: \"black\",\n    },\n    today: {\n      color: \"#fed801\",\n    },\n    outside: {\n      color: \"white\",\n    },\n    navButtonPrev: {\n      color: \"#fed801\",\n    },\n  };\n\n  const handleDayClick = (day, { selected }) => {\n    console.log(\"selected days \", props.selectedDays);\n    !selected &&\n      props.setSelectedDays([\n        ...props.selectedDays,\n        selected ? undefined : day,\n      ]);\n\n    const found = props.selectedDays.find(\n      (element) => Number(element) == Number(day)\n    );\n    console.log(\"found is\", found);\n    const find = props.selectedDays.indexOf(found);\n    console.log(\"find\", props.selectedDays.indexOf(found));\n\n    let holder = props.selectedDays;\n    console.log(\"all days was\", holder);\n    if (find > -1) {\n      holder.splice(find, 1);\n      console.log(\"all days\", holder);\n      // let newDays = props.selectedDays.splice(find, 1);\n      // console.log(\"newDays\", newDays);\n      // console.log(\"new selected days\", props.selectedDays);\n      // props.setSelectedDays(allDays);\n      setAllDays(holder);\n    }\n\n    console.log(\"all days\", allDays);\n\n    // console.log(\"day\", day);\n    // console.log(\"day number\", Number(day));\n  };\n\n  useEffect(() => {\n    props.setSelectedDays(allDays);\n  }, [allDays]);\n\n  const handleType = (e) => {\n    console.log(\"dropdown value\", e.target.value);\n    props.setSelectedType(e.target.value);\n  };\n\n  return (\n    <section className=\"calendar\">\n      <div>\n        <h3>Calendar</h3>\n        <select name=\"type\" onChange={handleType}>\n          <option value=\"\">Select Type</option>\n          <option value=\"powder\">Powder</option>\n          <option value=\"backcountry\">Backcountry</option>\n          <option value=\"total\">Total</option>\n        </select>\n      </div>\n      <DayPicker\n        //   month={new Date(2020, 3)}\n        //   modifiers={modifiers}\n        modifiersStyles={modifiersStyles}\n        selectedDays={props.selectedDays}\n        onDayClick={handleDayClick}\n        showOutsideDays\n      />\n    </section>\n  );\n}\n","import React, {useState, useEffect} from 'react'\n\nexport default function Header () {\n\n    let allMonths = ['January', 'February', 'March', 'April', 'May','June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n    const currentDate = () => {\n        let today = new Date();\n        let date = today.getDate();\n        let month = allMonths[today.getMonth()];\n        let year = today.getFullYear();\n        // var yyyy = today.getFullYear();\n\n        console.log(month + ' ' + date + ' ' + year)\n        return(month + ' ' + date + ', ' + year)\n        \n    }\n\n    return (\n        <header className = 'header'>\n\n            <div>\n            <h1>{currentDate()}</h1>\n            <h2>Ski Schedule and Data</h2>\n\n            </div>\n\n            <div className = 'line'>\n                \n            </div>\n\n        </header>\n    )\n\n}","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.scss\";\n\nexport default function Stats(props) {\n  // const [skiData, setSkiData] = useState({\n  //   // total: 50 ,\n  //   total: 50,\n  //   powder: 20,\n  //   backcountry: 10,\n  //   goal: 100,\n  // });\n\n  const [goalProgress, setGoalProgress] = useState(0);\n  const [other, setOther] = useState(0);\n\n  const getPercent = (decimal) => {\n    const val = (decimal * 100).toFixed(2);\n    return val + \"%\";\n  };\n\n  const calcGoalProgress = (total, goal) => {\n    return getPercent(total / goal);\n  };\n\n  const handleChange = (e) => {\n    props.setSkiData({\n      ...props.skiData,\n      [e.target.name]: parseInt(e.target.value),\n    });\n  };\n\n  useEffect(() => {\n    setGoalProgress(calcGoalProgress(props.skiData.total, props.skiData.goal));\n    if (props.selectedDays.length > 0 && props.selectedType !== \"\") {\n      props.setSkiData({\n        ...props.skiData,\n        [props.selectedType]: props.selectedDays.length,\n      });\n    }\n\n    setOther(\n      props.skiData.total - (props.skiData.powder + props.skiData.backcountry)\n    );\n  }, [\n    props.skiData.total,\n    props.skiData.goal,\n    props.skiData.powder,\n    props.skiData.backcountry,\n    props.selectedDays,\n    props.selectedType,\n  ]);\n\n  return (\n    <section className=\"stats\">\n      <h2>Ski Data</h2>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>Powder</td>\n            <td>{props.skiData.powder}</td>\n          </tr>\n          <tr>\n            <td>Backcountry</td>\n            <td>{props.skiData.backcountry}</td>\n          </tr>\n          <tr>\n            <td>Other</td>\n            <td>{other}</td>\n          </tr>\n        </tbody>\n        <tfoot>\n          <tr>\n            <td>Total</td>\n            <td>{props.skiData.total}</td>\n          </tr>\n        </tfoot>\n      </table>\n      <h3>Goal Progress: {goalProgress}</h3>\n\n      {/* <div>\n          <h3>Total Days: {skiData.total}</h3>\n          <h3>Powder Days: {skiData.powder}</h3>\n          <h3>Backcountry Days: {skiData.backcountry}</h3>\n        </div> */}\n\n      <h4>Update values</h4>\n      <div className=\"update\">\n        <div className=\"data-values\">\n          <div>\n            <label>Total Days:</label>\n            <input\n              type=\"number\"\n              id=\"total\"\n              name=\"total\"\n              value={props.skiData.total}\n              onChange={handleChange}\n            ></input>\n          </div>\n\n          <div>\n            <label>Powder Days:</label>\n            <input\n              type=\"number\"\n              id=\"powder\"\n              name=\"powder\"\n              value={props.skiData.powder}\n              onChange={handleChange}\n            ></input>\n          </div>\n\n          <div>\n            <label>Backcountry Days:</label>\n            <input\n              type=\"number\"\n              id=\"backcountry\"\n              name=\"backcountry\"\n              value={props.skiData.backcountry}\n              onChange={handleChange}\n            ></input>\n          </div>\n\n          <div>\n            <label>Goal:</label>\n            <input\n              type=\"number\"\n              id=\"goal\"\n              name=\"goal\"\n              value={props.skiData.goal}\n              onChange={handleChange}\n            ></input>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React, {useState} from 'react'\n\nexport default function Notes() {\n\n    const [allNotes, setAllNotes] = useState([])\n    const [chosenDate, setChosenDate] = useState(null)\n\n    const handleSubmit = () => {\n        let text = document.querySelector('textarea').value\n        let date = document.querySelector('input[type=\"date\"]').value\n        console.log(text)\n        console.log('all notes was', allNotes)\n        setAllNotes(allNotes => [...allNotes, [handleDate(date), text]])\n        console.log(date)\n        // setChosenDate(handleDate(date))\n      \n    }\n\n    const handleDate = (date) => {\n        if (!date) {\n            return ''\n        }\n        let values = date.split('-');\n        let year = values[0];\n        let selectedDate = values[2]\n        let allMonths = ['January', 'February', 'March', 'April', 'May','June', 'July', 'August', 'September', 'October', 'November', 'December']\n        let month = allMonths[parseInt(values[1]-1)]\n\n        let fullDate = `${month} ${selectedDate}, ${year}`\n\n        return fullDate\n\n    }\n\n\n\n    return (\n        <section className = 'note'>\n            <h3>Notes</h3>\n            <div className = 'form'>\n\n                <div>\n\n            <label>Date:</label>\n            <input type='date' name='date' />\n                </div>\n\n<div>\n\n            <label>Content:</label>\n            <textarea>\n\n            </textarea>\n</div>\n            <button onClick={() => handleSubmit()}>Submit</button>\n            </div>\n            <div className = 'all-notes'>\n                {allNotes.map((note, index) => {\n                    return (\n                    <div key={index+200} className = 'new-note'>\n                        <p key={index}>{note[0]  ? note[0] : 'unknown'}</p>\n                        <p key={index+100}>{note[1]}</p>\n                        </div>)\n                })}\n            </div>\n        </section>\n    )\n}","import React, { useState } from \"react\";\nimport Calendar from \"./Calendar\";\nimport Header from \"./Header\";\nimport Stats from \"./Stats\";\nimport Notes from \"./Notes\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [selectedDays, setSelectedDays] = useState([]);\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [skiData, setSkiData] = useState({\n    // total: 50 ,\n    total: 50,\n    powder: 20,\n    backcountry: 10,\n    goal: 100,\n  });\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"content\">\n        <Stats\n          selectedDays={selectedDays}\n          setSelectedDays={setSelectedDays}\n          selectedType={selectedType}\n          setSelectedType={setSelectedType}\n          skiData={skiData}\n          setSkiData={setSkiData}\n        />\n\n        <div className=\"subcontent\">\n          <Notes />\n\n          <Calendar\n            selectedDays={selectedDays}\n            setSelectedDays={setSelectedDays}\n            selectedType={selectedType}\n            setSelectedType={setSelectedType}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}